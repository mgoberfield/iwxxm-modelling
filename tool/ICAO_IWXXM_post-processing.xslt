<?xml version="1.0" encoding="UTF-8"?>

<!--
	XSLT to post-process XSDs generated by EA MDG Technology for GML

	Created by B.L. Choy (blchoy.hko@gmail.com).  First created on 29 March 2016.  Last updated on 30 March 2020.

	To be installed under "Resources/Stylesheets" and activited by selecting the stylesheet in "Generate GML Application Schema" window

	Tested with EA 12.1 Build 1224
-->

<!--
	EA GML transformation issues:

	(1) For UML classes of stereotype <<codeList>>, as their XSD counterparts are solely for inclusion as XSD attributes, only the types defined are required but not the element
	(2) Missing 'use="required"' in XSD attributes whose UML counterparts has a multiplicity of [1] (i.e.mandatory)
	(3) Even though an attribute of an UML class or the target role of an association has a tagged value 'nillable="true"', this was not reflected in its XSD counterpart (see Section 8.2.3.2 of ISO 19136:2007)
	(4) Generalizatiosn to GML primitives are ignored.  This is not a bug but being able to do this is an "illegal convenience"
	(5) (Tagged value 'xsdAsAttribute="true"') The types of UML object able to be serialized as XSD attributes are somewhat limited.  Currently this is rectified by CMLClassMapping.xml
	(6) Notes to an attribute of an UML object is not copied to the corresponding XSD attribute.  This is not a GML requirement (see Section E.2.4.12 of ISO19136:2007 documentation) but essential to schema readers
	(7) xsl:namespace is not working in the stylesheet processor of EA12.1, even though it is claimed to conform to XSLT 2.0 requirements
	(8) Self associations of an UML class are not transformed to their XSD counterparts
	(9) The METCE specific serialization of <quantity> element implemented in EA covers UML classes with stereotype <<Type>> and <<DataType>> only
-->

<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes=" xs"> 

	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>

	<!-- Identity transform with removal of default namespace xs: -->
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" match="xs:*">
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select='namespace::*[not(. = namespace-uri(current()))]' />
			<xsl:apply-templates select='@*|node()' />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:gml="http://www.opengis.net/gml/3.2" match="*">
		<xsl:element name="{name()}">
			<xsl:copy-of select='namespace::*[not(namespace-uri(.) = "")][not(. = "http://www.w3.org/2001/XMLSchema")]' />
			<xsl:apply-templates select='@*|node()' />
		</xsl:element>
	</xsl:template>
	<xsl:template match="@*">
		<xsl:attribute name="{local-name()}">
			<xsl:value-of select="."/>
		</xsl:attribute>
	</xsl:template>
	<xsl:template match="@type[substring(.,1,3)='xs:']">
		<xsl:attribute name="type">
			<xsl:value-of select="substring-after(.,'xs:')"/>
		</xsl:attribute>
	</xsl:template>
	<xsl:template match="@base[substring(.,1,3)='xs:']">
		<xsl:attribute name="base">
			<xsl:value-of select="substring-after(.,'xs:')"/>
		</xsl:attribute>
	</xsl:template>
	<xsl:template match="text() | processing-instruction()">
        	<xsl:copy/>
	</xsl:template>

	<!-- Add disclaimer -->
	<!-- Disabled as the text has been included in the model already -->
	<!--
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:schema/xs:annotation/xs:documentation">
		<documentation>References to WMO and ICAO Technical Regulations within this XML schema shall have no formal status and are for information purposes only. Where there are differences between the Technical Regulations and the schema, the Technical Regulations shall take precedence. Technical Regulations may impose requirements that are not described in this schema.</documentation>
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select='namespace::*[not(. = namespace-uri(current()))]' />
			<xsl:apply-templates select='@*|node()' />
		</xsl:element>
	</xsl:template>
	-->

	<!-- Remove substitutionGroup and replace extension base under AngleWithNilReason, LengthWithNilReason, DistanceWithNilReason, MeasureWithNilReason, VelocityWithNilReason and StringWithNilReason (EA GML transformation Issue 4) -->
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:element[@name='AngleWithNilReason']">
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select="@*[not(name() = 'substitutionGroup')]"/>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='AngleWithNilReasonType']/xs:complexContent">
		<xsl:element name='simpleContent' >
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='AngleWithNilReasonType']/xs:complexContent/xs:extension">
		<xsl:element name='{local-name()}' >
			<xsl:attribute name="base">
				<xsl:value-of select="'gml:AngleType'"/>
			</xsl:attribute>
			<xsl:element name="attribute">
				<xsl:attribute name="name">
					<xsl:value-of select="'nilReason'"/>
				</xsl:attribute>
				<xsl:attribute name="type">
					<xsl:value-of select="'gml:NilReasonType'"/>
				</xsl:attribute>
			</xsl:element>
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:element[@name='DistanceWithNilReason']">
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select="@*[not(name() = 'substitutionGroup')]"/>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='DistanceWithNilReasonType']/xs:complexContent">
		<xsl:element name='simpleContent' >
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='DistanceWithNilReasonType']/xs:complexContent/xs:extension">
		<xsl:element name='{local-name()}' >
			<xsl:attribute name="base">
				<xsl:value-of select="'gml:LengthType'"/>
			</xsl:attribute>
			<xsl:element name="attribute">
				<xsl:attribute name="name">
					<xsl:value-of select="'nilReason'"/>
				</xsl:attribute>
				<xsl:attribute name="type">
					<xsl:value-of select="'gml:NilReasonType'"/>
				</xsl:attribute>
			</xsl:element>
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:element[@name='LengthWithNilReason']">
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select="@*[not(name() = 'substitutionGroup')]"/>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='LengthWithNilReasonType']/xs:complexContent">
		<xsl:element name='simpleContent' >
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='LengthWithNilReasonType']/xs:complexContent/xs:extension">
		<xsl:element name='{local-name()}' >
			<xsl:attribute name="base">
				<xsl:value-of select="'gml:LengthType'"/>
			</xsl:attribute>
			<xsl:element name="attribute">
				<xsl:attribute name="name">
					<xsl:value-of select="'nilReason'"/>
				</xsl:attribute>
				<xsl:attribute name="type">
					<xsl:value-of select="'gml:NilReasonType'"/>
				</xsl:attribute>
			</xsl:element>
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:element[@name='MeasureWithNilReason']">
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select="@*[not(name() = 'substitutionGroup')]"/>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='MeasureWithNilReasonType']/xs:complexContent">
		<xsl:element name='simpleContent' >
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='MeasureWithNilReasonType']/xs:complexContent/xs:extension">
		<xsl:element name='{local-name()}' >
			<xsl:attribute name="base">
				<xsl:value-of select="'gml:MeasureType'"/>
			</xsl:attribute>
			<xsl:element name="attribute">
				<xsl:attribute name="name">
					<xsl:value-of select="'nilReason'"/>
				</xsl:attribute>
				<xsl:attribute name="type">
					<xsl:value-of select="'gml:NilReasonType'"/>
				</xsl:attribute>
			</xsl:element>
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:element[@name='VelocityWithNilReason']">
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select="@*[not(name() = 'substitutionGroup')]"/>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='VelocityWithNilReasonType']/xs:complexContent">
		<xsl:element name='simpleContent' >
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='VelocityWithNilReasonType']/xs:complexContent/xs:extension">
		<xsl:element name='{local-name()}' >
			<xsl:attribute name="base">
				<xsl:value-of select="'gml:SpeedType'"/>
			</xsl:attribute>
			<xsl:element name="attribute">
				<xsl:attribute name="name">
					<xsl:value-of select="'nilReason'"/>
				</xsl:attribute>
				<xsl:attribute name="type">
					<xsl:value-of select="'gml:NilReasonType'"/>
				</xsl:attribute>
			</xsl:element>
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:element[@name='StringWithNilReason']">
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select="@*[not(name() = 'substitutionGroup')]"/>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='StringWithNilReasonType']/xs:complexContent">
		<xsl:element name='simpleContent' >
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='StringWithNilReasonType']/xs:complexContent/xs:extension">
		<xsl:element name='{local-name()}' >
			<xsl:attribute name="base">
				<xsl:value-of select="'string'"/>
			</xsl:attribute>
			<xsl:element name="attribute">
				<xsl:attribute name="name">
					<xsl:value-of select="'nilReason'"/>
				</xsl:attribute>
				<xsl:attribute name="type">
					<xsl:value-of select="'gml:NilReasonType'"/>
				</xsl:attribute>
			</xsl:element>
		</xsl:element>
	</xsl:template>

	<!-- Replace substitutionGroup and extension base of elements TropicalCycloneSIGMETEvolvingConditionCollection, VolcanicAshSIGMETEvolvingConditionCollection, TropicalCycloneSIGMETPositionCollection and VolcanicAshSIGMETPositionCollection -->
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:element[@name='TropicalCycloneSIGMETEvolvingConditionCollection' or @name='VolcanicAshSIGMETEvolvingConditionCollection']">
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select="@*[not(name() = 'substitutionGroup')]"/>
			<xsl:attribute name="substitutionGroup">
				<xsl:value-of select="'iwxxm:SIGMETEvolvingConditionCollection'"/>
			</xsl:attribute>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='TropicalCycloneSIGMETEvolvingConditionCollectionType' or @name='VolcanicAshSIGMETEvolvingConditionCollectionType']/xs:complexContent/xs:extension">
		<xsl:element name='{local-name()}' >
			<xsl:attribute name="base">
				<xsl:value-of select="'iwxxm:SIGMETEvolvingConditionCollectionType'"/>
			</xsl:attribute>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:element[@name='TropicalCycloneSIGMETPositionCollection' or @name='VolcanicAshSIGMETPositionCollection']">
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select="@*[not(name() = 'substitutionGroup')]"/>
			<xsl:attribute name="substitutionGroup">
				<xsl:value-of select="'iwxxm:SIGMETPositionCollection'"/>
			</xsl:attribute>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='TropicalCycloneSIGMETPositionCollectionType' or @name='VolcanicAshSIGMETPositionCollectionType']/xs:complexContent/xs:extension">
		<xsl:element name='{local-name()}' >
			<xsl:attribute name="base">
				<xsl:value-of select="'iwxxm:SIGMETPositionCollectionType'"/>
			</xsl:attribute>
			<xsl:apply-templates />
		</xsl:element>
	</xsl:template>

	<!-- Remove empty sequence tags under SPECIType, METARType, AerodromeSurfaceWindForecastType, LengthWithNilReason and DistanceWithNilReason.  A possible EA implementation issue -->
	<!-- Update: This is probably correct, as indicated in ISO19136 documentation
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='SPECIType']/xs:complexContent/xs:extension/xs:sequence"/>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='METARType']/xs:complexContent/xs:extension/xs:sequence"/>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='AerodromeSurfaceWindForecastType']/xs:complexContent/xs:extension/xs:sequence"/>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='DistanceWithNilReasonType']/xs:complexContent/xs:extension/xs:sequence"/>
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:complexType[@name='LengthWithNilReasonType']/xs:complexContent/xs:extension/xs:sequence"/>
	-->

	<!-- Additional imports required for common.xsd (EA will not import a schema if none of its elements/types is referenced) -->
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:schema/xs:import[1]">
		<!-- Import for localized AIXM property types to reference the AIXM schemas.  Make sure that the schema involved is common.xsd -->
		<xsl:if xmlns:xs="http://www.w3.org/2001/XMLSchema" test="../xs:element[@name='Report']">
			<xsl:element name='import' >
				<xsl:attribute name="namespace">
					<xsl:value-of select="'http://www.aixm.aero/schema/5.1.1'"/>
				</xsl:attribute>
				<xsl:attribute name="schemaLocation">
					<!-- <xsl:value-of select="'http://www.aixm.aero/schema/5.1.1_profiles/AIXM_WX/5.1.1b/AIXM_Features.xsd'"/> -->
					<xsl:value-of select="'http://www.aixm.aero/schema/5.1.1/AIXM_Features.xsd'"/>
				</xsl:attribute>
				<xsl:apply-templates />
			</xsl:element>
		</xsl:if>
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select='namespace::*[not(. = namespace-uri(current()))]' />
			<xsl:apply-templates select='@*|node()' />
		</xsl:element>
	</xsl:template>
	<!-- Not working in EA12.1
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:schema">
		<xsl:element name='{local-name()}'>
			<xsl:if xmlns:xs="http://www.w3.org/2001/XMLSchema" test="./xs:element[@name='Report']">
				<xsl:namespace name="aixm" select="'http://www.aixm.aero/schema/5.1.1'"/>
			</xsl:if>
			<xsl:copy-of select='namespace::*[not(. = namespace-uri(current()))]' />
			<xsl:apply-templates select='@*|node()' />
		</xsl:element>
	</xsl:template>
	-->

	<!-- Insert complex types to common.xsd which cannot be handled by UML -->
	<xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema" match="xs:schema/*[last()]">
		<xsl:param name="name"/>
		<xsl:param name="base"/>
		<xsl:param name="ref"/>
		<xsl:element name='{local-name()}' >
			<xsl:copy-of select='namespace::*[not(. = namespace-uri(current()))]' />
			<xsl:apply-templates select='@*|node()' />
		</xsl:element>

		<!-- Make sure that the schema involved is common.xsd -->
		<xsl:if xmlns:xs="http://www.w3.org/2001/XMLSchema" test="../xs:element[@name='Report']">

			<!-- Insert IWXXM property types to common.xsd to get around with AIXM's broken property types -->
			<xsl:call-template name="propertyType">
				<xsl:with-param name="name" select="'UnitPropertyType'"/>
				<xsl:with-param name="base" select="'aixm:AbstractAIXMFeatureType'"/>
				<xsl:with-param name="ref" select="'aixm:Unit'"/>
			</xsl:call-template>
			<xsl:call-template name="propertyType">
				<xsl:with-param name="name" select="'AirspacePropertyType'"/>
				<xsl:with-param name="base" select="'aixm:AbstractAIXMFeatureType'"/>
				<xsl:with-param name="ref" select="'aixm:Airspace'"/>
			</xsl:call-template>
			<xsl:call-template name="propertyType">
				<xsl:with-param name="name" select="'AirspaceLayerPropertyType'"/>
				<xsl:with-param name="base" select="'aixm:AbstractAIXMFeatureType'"/>
				<xsl:with-param name="ref" select="'aixm:AirspaceLayer'"/>
			</xsl:call-template>
			<xsl:call-template name="propertyType">
				<xsl:with-param name="name" select="'AirspaceVolumePropertyType'"/>
				<xsl:with-param name="base" select="'aixm:AbstractAIXMFeatureType'"/>
				<xsl:with-param name="ref" select="'aixm:AirspaceVolume'"/>
			</xsl:call-template>
			<xsl:call-template name="propertyType">
				<xsl:with-param name="name" select="'AirportHeliportPropertyType'"/>
				<xsl:with-param name="base" select="'aixm:AbstractAIXMFeatureType'"/>
				<xsl:with-param name="ref" select="'aixm:AirportHeliport'"/>
			</xsl:call-template>
			<xsl:call-template name="propertyType">
				<xsl:with-param name="name" select="'RunwayPropertyType'"/>
				<xsl:with-param name="base" select="'aixm:AbstractAIXMFeatureType'"/>
				<xsl:with-param name="ref" select="'aixm:Runway'"/>
			</xsl:call-template>
			<xsl:call-template name="propertyType">
				<xsl:with-param name="name" select="'RunwayDirectionPropertyType'"/>
				<xsl:with-param name="base" select="'aixm:AbstractAIXMFeatureType'"/>
				<xsl:with-param name="ref" select="'aixm:RunwayDirection'"/>
			</xsl:call-template>

			<!-- Insert "ValDistanceVerticalType" to get around with AIXM's problematic nilReason -->
			<xsl:element name="complexType">
				<xsl:attribute name="name">
					<xsl:value-of select="'ValDistanceVerticalType'"/>
				</xsl:attribute>
				<xsl:element name="simpleContent">
					<xsl:element name="extension">
						<xsl:attribute name="base">
							<xsl:value-of select="'aixm:ValDistanceVerticalBaseType'"/>
						</xsl:attribute>
						<xsl:element name="attribute">
							<xsl:attribute name="name">
								<xsl:value-of select="'uom'"/>
							</xsl:attribute>
							<xsl:attribute name="type">
								<xsl:value-of select="'aixm:UomDistanceVerticalType'"/>
							</xsl:attribute>
						</xsl:element>
						<xsl:element name="attribute">
							<xsl:attribute name="name">
								<xsl:value-of select="'nilReason'"/>
							</xsl:attribute>
							<xsl:attribute name="type">
								<xsl:value-of select="'gml:NilReasonType'"/>
							</xsl:attribute>
						</xsl:element>
					</xsl:element>
				</xsl:element>
			</xsl:element>

			<!-- Insert missing AbstractTimeObjectPropertyType of GML -->
			<xsl:element name="complexType">
				<xsl:attribute name="name">
					<xsl:value-of select="'AbstractTimeObjectPropertyType'"/>
				</xsl:attribute>
				<xsl:element name="sequence">
					<xsl:attribute name="minOccurs">
						<xsl:value-of select="0"/>
					</xsl:attribute>
					<xsl:element name="element">
						<xsl:attribute name="ref">
							<xsl:value-of select="'gml:AbstractTimeObject'"/>
						</xsl:attribute>
					</xsl:element>
				</xsl:element>
				<xsl:element name="attributeGroup">
					<xsl:attribute name="ref">
						<xsl:value-of select="'gml:AssociationAttributeGroup'"/>
					</xsl:attribute>
				</xsl:element>
			</xsl:element>

			<!-- Insert IWXXM extention type to common.xsd to ensure that extended content always has a web accessible schema definition -->
			<xsl:element name="complexType">
				<xsl:attribute name="name">
					<xsl:value-of select="'ExtensionType'"/>
				</xsl:attribute>
				<xsl:element name="sequence">
					<xsl:element name="any">
						<xsl:attribute name="processContents">
							<xsl:value-of select="'strict'"/>
						</xsl:attribute>
					</xsl:element>
				</xsl:element>
			</xsl:element>

		</xsl:if>
	
	</xsl:template>
	<xsl:template name="propertyType">
		<xsl:param name="name"/>
		<xsl:param name="base"/>
		<xsl:param name="ref"/>
		<xsl:element name="complexType">
			<xsl:attribute name="name">
				<xsl:value-of select="$name"/>
			</xsl:attribute>
			<!-- Extension based removed per Aaron-Choy discussion -->
			<!--
			<xsl:element name="complexContent">
				<xsl:element name="extension">
					<xsl:attribute name="base">
						<xsl:value-of select="$base"/>
					</xsl:attribute>
			-->
					<xsl:element name="sequence">
						<xsl:attribute name="minOccurs">
							<xsl:value-of select="0"/>
						</xsl:attribute>
						<xsl:element name="element">
							<xsl:attribute name="ref">
								<xsl:value-of select="$ref"/>
							</xsl:attribute>
						</xsl:element>
					</xsl:element>
					<xsl:element name="attributeGroup">
						<xsl:attribute name="ref">
							<xsl:value-of select="'gml:AssociationAttributeGroup'"/>
						</xsl:attribute>
					</xsl:element>
					<xsl:element name="attributeGroup">
						<xsl:attribute name="ref">
							<xsl:value-of select="'gml:OwnershipAttributeGroup'"/>
						</xsl:attribute>
					</xsl:element>
			<!--
				</xsl:element>
			</xsl:element>
			-->
		</xsl:element>
	</xsl:template>

	<!-- Attributes manipulation fragment from external XSLT AttributeNotesFromXMI_IWXXM.xslt -->
	<!-- Start -->
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeRunwayState'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:sequence/xs:element[@name='runway']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:attribute[@name='runway']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The runway to which the conditions apply.  The runway may be missing in cases where all runways are closed due to snow</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:sequence/xs:element[@name='depositType']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:attribute[@name='depositType']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The type of runway deposit, such as damp conditions, wet snow, or ice.

WMO 306:
Table 0919</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:sequence/xs:element[@name='contamination']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:attribute[@name='contamination']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Proportion of runway surface that is contaminated - usually expressed as a percentage of the total runway area.

WMO reporting procedures require that contamination is reported in the following categories:
- less than 10%;
- between 11% and 25%;
- between 26% and 50%; and
- more than 50%.

See WMO No. 306:
- WMO Code table 0519
- BUFR Code table 0 20 087</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:sequence/xs:element[@name='depthOfDeposit']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:attribute[@name='depthOfDeposit']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Depth of deposit on the surface of the runway.

Measured depth of deposit shall be given in millimeters ("mm").

See WMO No. 306 WMO Code table 1079.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:sequence/xs:element[@name='estimatedSurfaceFrictionOrBrakingAction']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:attribute[@name='estimatedSurfaceFrictionOrBrakingAction']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The estimated surface friction or braking action for the affected runway.  When braking conditions are not reported and/or the runway is not operational estimatedSurfaceFrictionOrBrakingAction will not be reported.

WMO 306:
Table 0366</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:sequence/xs:element[@name='allRunways']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:attribute[@name='allRunways']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When true, indicates the reported conditions apply to all runways</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:sequence/xs:element[@name='cleared']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:attribute[@name='cleared']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicates that reported runway has been cleared of meteorological deposits, such as snow.

ICAO Annex 3 / WMO No. 49-2:
"CLRD"

Section 4.8.1.5, Table A3-2 "State of the runway"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:sequence/xs:element[@name='fromPreviousReport']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayStateType']//xs:attribute[@name='fromPreviousReport']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When true, indicates a new runway state report is not available in time for dissemination of the METAR message and the previous runway state report is being repeated</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='runwayState' and 'runwayState' != '') or (@name='AerodromeRunwayState' and 'AerodromeRunwayState' != '')]/@type"/>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='runwayState' and 'runwayState' != '') or (@name='AerodromeRunwayState' and 'AerodromeRunwayState' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="complexType">
            <xsl:element name="complexContent">
               <xsl:element name="extension">
                  <xsl:attribute name="base">
                     <xsl:value-of select="$typeName"/>
                  </xsl:attribute>
                  <xsl:element name="attribute">
                     <xsl:attribute name="name">
                        <xsl:value-of select="'nilReason'"/>
                     </xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:value-of select="'gml:NilReasonType'"/>
                     </xsl:attribute>
                  </xsl:element>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayVisualRangeType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeRunwayVisualRange'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayVisualRangeType']//xs:sequence/xs:element[@name='runway']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayVisualRangeType']//xs:attribute[@name='runway']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The runway to which reported runway visual range information applies</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayVisualRangeType']//xs:sequence/xs:element[@name='meanRVR']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayVisualRangeType']//xs:attribute[@name='meanRVR']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The mean recent runway visual range value observed. This mean represents the 10 minute average for observed RVR except when the 10-minute period immediately preceding the observation includes a marked discontinuity in runway visual range values, only those values occurring after the discontinuity is used for obtaining mean values.

Mean runway visual range distance shall be reported in meters ("m").

To report a mean RVR of at least 2000 meters, mean RVR is reported as 2000 meters and the operator is reported as "above"

Annex 3:
Table A3-2 "RVR/RVR"
Section 4.3.6.6</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayVisualRangeType']//xs:sequence/xs:element[@name='meanRVROperator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayVisualRangeType']//xs:attribute[@name='meanRVROperator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reported relational operator for the mean RVR. When reported, this operator is reported in conjunction with mean RVR.

To report a mean RVR of at least 2000 metres, mean RVR is reported as 2000 metres and the operator is reported as "above".  To report a mean RVR of less than 50 metres, mean RVR is reported as 50 metres and the operator is reported as "below".  When no operator is reported, mean RVR represents an exact value with identical semantics to other measured quantities</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayVisualRangeType']//xs:sequence/xs:element[@name='pastTendency']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeRunwayVisualRangeType']//xs:attribute[@name='pastTendency']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The runway visual range tendency (up, down, none).

If the runway visual range values during the 10-minute period have shown a distinct tendency, such that the mean during the first 5 minutes varies by 100 m or more from the mean during the second 5 minutes of the period, this should be indicated. When the variation of the runway visual range values shows an upward or downward tendency, this should be indicated by "Up" or "Down", respectively. In circumstances when actual fluctuations during the 10-minute period show no distinct tendency, this should be indicated using "No Change?. When indications of tendency are not available, no information should be reported

ICAO Annex 3 / WMO No. 49:
Table A3-2 Note 9
Section 4.3.6.6a</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='rvr' and 'rvr' != '') or (@name='AerodromeRunwayVisualRange' and 'AerodromeRunwayVisualRange' != '')]/@type"/>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='rvr' and 'rvr' != '') or (@name='AerodromeRunwayVisualRange' and 'AerodromeRunwayVisualRange' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="complexType">
            <xsl:element name="complexContent">
               <xsl:element name="extension">
                  <xsl:attribute name="base">
                     <xsl:value-of select="$typeName"/>
                  </xsl:attribute>
                  <xsl:element name="attribute">
                     <xsl:attribute name="name">
                        <xsl:value-of select="'nilReason'"/>
                     </xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:value-of select="'gml:NilReasonType'"/>
                     </xsl:attribute>
                  </xsl:element>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='recentWeather' and 'recentWeather' != '') or (@name='AerodromeRecentWeather' and 'AerodromeRecentWeather' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:sequence/xs:element[@name='issueTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:attribute[@name='issueTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which this report was issued</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:sequence/xs:element[@name='aerodrome']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:attribute[@name='aerodrome']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The aerodrome location for this report</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:sequence/xs:element[@name='observationTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:attribute[@name='observationTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which phenomena were observed.  This may differ from the times reported for forecast conditions</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:sequence/xs:element[@name='observation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:attribute[@name='observation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The observation which resulted in the current meteorological conditions at an aerodrome</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:sequence/xs:element[@name='trendForecast']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:attribute[@name='trendForecast']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The process that results in a trend forecast.  When no change is expected to occur during a forecast period ("NOSIG") this is indicated by a single missing trend forecast with a nil reason of noSignificantChange</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:sequence/xs:element[@name='automatedStation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationReportType']//xs:attribute[@name='automatedStation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When true, this report was reported by an automated station.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SPECIType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element SPECI'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VisualRangeTendencyType']//xs:sequence/xs:element[@name='UPWARD']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VisualRangeTendencyType']//xs:attribute[@name='UPWARD']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Upward (increasing) tendency</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VisualRangeTendencyType']//xs:sequence/xs:element[@name='NO_CHANGE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VisualRangeTendencyType']//xs:attribute[@name='NO_CHANGE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">No distinct change</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VisualRangeTendencyType']//xs:sequence/xs:element[@name='DOWNWARD']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VisualRangeTendencyType']//xs:attribute[@name='DOWNWARD']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Downward (decreasing) tendency</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VisualRangeTendencyType']//xs:sequence/xs:element[@name='MISSING_VALUE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VisualRangeTendencyType']//xs:attribute[@name='MISSING_VALUE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Missing value</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSeaConditionType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeSeaCondition'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSeaConditionType']//xs:sequence/xs:element[@name='seaSurfaceTemperature']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSeaConditionType']//xs:attribute[@name='seaSurfaceTemperature']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The sea-surface temperature observed by aeronautical meteorological stations established on offshore structures in support of helicopter operations.

The term sea surface temperature is generally meant to be representative of the upper few meters of the ocean as opposed to the skin temperature, which is the temperature of the upper few centimeters.

Temperatures shall be reported in degrees Celsius ("Cel").

ICAO Annex 3 / WMO No. 49-2:
Section 4.8.1.5a</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSeaConditionType']//xs:sequence/xs:element[@name='significantWaveHeight']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSeaConditionType']//xs:attribute[@name='significantWaveHeight']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The significant wave height observed.

Significant wave height shall be reported in meters ("m").</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSeaConditionType']//xs:sequence/xs:element[@name='seaState']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSeaConditionType']//xs:attribute[@name='seaState']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The state of the sea observed by aeronautical meteorological stations established on offshore structures in support of helicopter operations

ICAO Annex 3 / WMO No. 49-2:
Section 4.8.1.5a

WMO 306:
Table 3700</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='seaCondition' and 'seaCondition' != '') or (@name='AerodromeSeaCondition' and 'AerodromeSeaCondition' != '')]/@type"/>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='seaCondition' and 'seaCondition' != '') or (@name='AerodromeSeaCondition' and 'AerodromeSeaCondition' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="complexType">
            <xsl:element name="complexContent">
               <xsl:element name="extension">
                  <xsl:attribute name="base">
                     <xsl:value-of select="$typeName"/>
                  </xsl:attribute>
                  <xsl:element name="attribute">
                     <xsl:attribute name="name">
                        <xsl:value-of select="'nilReason'"/>
                     </xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:value-of select="'gml:NilReasonType'"/>
                     </xsl:attribute>
                  </xsl:element>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeWindShearType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeWindShear'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeWindShearType']//xs:sequence/xs:element[@name='runway']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeWindShearType']//xs:attribute[@name='runway']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The specific runway(s) affected by wind shear at this aerodrome. No specific runways are reported when all runways are affected by wind shear</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeWindShearType']//xs:sequence/xs:element[@name='allRunways']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeWindShearType']//xs:attribute[@name='allRunways']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When true, all runways are observed to have wind shear</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='windShear' and 'windShear' != '') or (@name='AerodromeWindShear' and 'AerodromeWindShear' != '')]/@type"/>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='windShear' and 'windShear' != '') or (@name='AerodromeWindShear' and 'AerodromeWindShear' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="complexType">
            <xsl:element name="complexContent">
               <xsl:element name="extension">
                  <xsl:attribute name="base">
                     <xsl:value-of select="$typeName"/>
                  </xsl:attribute>
                  <xsl:element name="attribute">
                     <xsl:attribute name="name">
                        <xsl:value-of select="'nilReason'"/>
                     </xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:value-of select="'gml:NilReasonType'"/>
                     </xsl:attribute>
                  </xsl:element>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element MeteorologicalAerodromeTrendForecast'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which meteorological phenomena occur</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:sequence/xs:element[@name='timeIndicator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:attribute[@name='timeIndicator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The human-readable time indicator for this trend forecast.  This should match the time period or time instant reported in the phenomenon time</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:sequence/xs:element[@name='prevailingVisibility']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:attribute[@name='prevailingVisibility']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The prevailing horizontal visibility reported in a trend forecast.

Prevailing horizontal visibility shall be reported in meters ("m").</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:sequence/xs:element[@name='prevailingVisibilityOperator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:attribute[@name='prevailingVisibilityOperator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reported relational operator for the prevailing horizontal visibility.  When reported, this operator is reported in conjunction with prevailing visibility.

To report a prevailing visibility of at least 10000 meters, prevailing visibility is reported as 10000 meters and the operator is reported as "above".

When no operator is reported, prevailing visibility represents an exact value with identical semantics to other measured quantities</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:sequence/xs:element[@name='changeIndicator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:attribute[@name='changeIndicator']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The change indicator for this trend forecast - becoming, temporary conditions, or no significant change</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:sequence/xs:element[@name='cloudAndVisibilityOK']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:attribute[@name='cloudAndVisibilityOK']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When true, indicates that the following conditions occur simultaneously at the time of forecast (also know as "CAVOK"):

a) visibility, 10km or more, and the lowest visibility is not reported
b) no cloud of operational significance
c) no weather of significance to aviation

Information on visibility, runway visual range, present weather and cloud amount, cloud type and height of cloud base shall not be reported.  See ICAO Annex 3 / WMO No. 49-2 Section 2.2.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:sequence/xs:element[(@name='cloud' and 'cloud' != '') or (@name='AerodromeCloudForecast' and 'AerodromeCloudForecast' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeTrendForecastType']//xs:sequence/xs:element[(@name='weather' and 'weather' != '') or (@name='AerodromeForecastWeather' and 'AerodromeForecastWeather' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element MeteorologicalAerodromeObservation'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[@name='airTemperature']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:attribute[@name='airTemperature']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The observed air temperature.  This is the temperature indicated by a thermometer exposed to the air in a place sheltered from direct solar radiation.

Measured air temperature shall be given in degrees Celsius ("Cel").</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[@name='dewpointTemperature']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:attribute[@name='dewpointTemperature']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The observed dew point temperature.  This is the temperature to which a given air parcel must be cooled at constant pressure and constant water vapor content in order for saturation to occur.

Measured dew-point temperature shall be given in degrees Celsius ("Cel").</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[@name='qnh']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:attribute[@name='qnh']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The observed QNH altimeter setting.

Altitude setting (also known as QNH) is defined as barometric pressure adjusted to sea level. It is a pressure setting used by pilots, air traffic control (ATC), and low frequency weather beacons to refer to the barometric setting which, when set on an aircraft's altimeter, will cause the altimeter to read altitude above mean sea level within a certain defined region.

Measured altimeter setting shall be given in hectoPascals ("hPa").</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[@name='cloudAndVisibilityOK']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:attribute[@name='cloudAndVisibilityOK']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When true, indicates that the following conditions occur simultaneously at the time of observation (also know as "CAVOK"):

a) visibility, 10km or more, and the lowest visibility is not reported
b) no cloud of operational significance
c) no weather of significance to aviation

Information on visibility, runway visual range, present weather and cloud amount, cloud type and height of cloud base shall not be reported.  See ICAO Annex 3 / WMO No. 49-2 Section 2.2.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='surfaceWind' and 'surfaceWind' != '') or (@name='AerodromeSurfaceWind' and 'AerodromeSurfaceWind' != '')]/@type"/>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='surfaceWind' and 'surfaceWind' != '') or (@name='AerodromeSurfaceWind' and 'AerodromeSurfaceWind' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="complexType">
            <xsl:element name="complexContent">
               <xsl:element name="extension">
                  <xsl:attribute name="base">
                     <xsl:value-of select="$typeName"/>
                  </xsl:attribute>
                  <xsl:element name="attribute">
                     <xsl:attribute name="name">
                        <xsl:value-of select="'nilReason'"/>
                     </xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:value-of select="'gml:NilReasonType'"/>
                     </xsl:attribute>
                  </xsl:element>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='presentWeather' and 'presentWeather' != '') or (@name='AerodromePresentWeather' and 'AerodromePresentWeather' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='visibility' and 'visibility' != '') or (@name='AerodromeHorizontalVisibility' and 'AerodromeHorizontalVisibility' != '')]/@type"/>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='visibility' and 'visibility' != '') or (@name='AerodromeHorizontalVisibility' and 'AerodromeHorizontalVisibility' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="complexType">
            <xsl:element name="complexContent">
               <xsl:element name="extension">
                  <xsl:attribute name="base">
                     <xsl:value-of select="$typeName"/>
                  </xsl:attribute>
                  <xsl:element name="attribute">
                     <xsl:attribute name="name">
                        <xsl:value-of select="'nilReason'"/>
                     </xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:value-of select="'gml:NilReasonType'"/>
                     </xsl:attribute>
                  </xsl:element>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='cloud' and 'cloud' != '') or (@name='AerodromeCloud' and 'AerodromeCloud' != '')]/@type"/>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeObservationType']//xs:sequence/xs:element[(@name='cloud' and 'cloud' != '') or (@name='AerodromeCloud' and 'AerodromeCloud' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="complexType">
            <xsl:element name="complexContent">
               <xsl:element name="extension">
                  <xsl:attribute name="base">
                     <xsl:value-of select="$typeName"/>
                  </xsl:attribute>
                  <xsl:element name="attribute">
                     <xsl:attribute name="name">
                        <xsl:value-of select="'nilReason'"/>
                     </xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:value-of select="'gml:NilReasonType'"/>
                     </xsl:attribute>
                  </xsl:element>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeCloudType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeCloud'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeCloudType']//xs:sequence/xs:element[@name='verticalVisibility']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeCloudType']//xs:attribute[@name='verticalVisibility']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reported vertical visibility.  Vertical visibility is defined as the vertical visual range into an obscuring medium.

Measured vertical visibility shall be reported in either two units of measures: meters ("m") or feet ("[ft_i]").

Note: vertical visibility is only reported in aviation-specific WMO Code-forms (FM-15 METAR, FM-16 SPECI and FM-51 TAF) thus prevailing visibility is considered to be an aviation-specific quantity.

When the sky is obscured and the value of the vertical visibility cannot be determined by the automatic observing system due to a temporary failure of the system/sensor ("VV///") the vertical visibility is missing with a nil reason of notObservable</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeCloudType']//xs:sequence/xs:element[(@name='layer' and 'layer' != '') or (@name='CloudLayer' and 'CloudLayer' != '')]/@type"/>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeCloudType']//xs:sequence/xs:element[(@name='layer' and 'layer' != '') or (@name='CloudLayer' and 'CloudLayer' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="complexType">
            <xsl:element name="complexContent">
               <xsl:element name="extension">
                  <xsl:attribute name="base">
                     <xsl:value-of select="$typeName"/>
                  </xsl:attribute>
                  <xsl:element name="attribute">
                     <xsl:attribute name="name">
                        <xsl:value-of select="'nilReason'"/>
                     </xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:value-of select="'gml:NilReasonType'"/>
                     </xsl:attribute>
                  </xsl:element>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TrendForecastTimeIndicatorType']//xs:sequence/xs:element[@name='FROM_UNTIL']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TrendForecastTimeIndicatorType']//xs:attribute[@name='FROM_UNTIL']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">This trend forecast specifies a time period which commences at a specified time and is completed by another specified time (FM and TL)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TrendForecastTimeIndicatorType']//xs:sequence/xs:element[@name='FROM']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TrendForecastTimeIndicatorType']//xs:attribute[@name='FROM']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">This trend forecast specifies a time period which commences at a specified time and is completed by the end of the trend forecast period (FM)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TrendForecastTimeIndicatorType']//xs:sequence/xs:element[@name='UNTIL']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TrendForecastTimeIndicatorType']//xs:attribute[@name='UNTIL']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">This trend forecast specifies a time period which commences at the beginning of the trend forecast period and is completed by a specified time (TL)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TrendForecastTimeIndicatorType']//xs:sequence/xs:element[@name='AT']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TrendForecastTimeIndicatorType']//xs:attribute[@name='AT']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">This trend forecast specifies a time instant at which time conditions occur (AT)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='METARType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element METAR'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeSurfaceWind'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:sequence/xs:element[@name='meanWindDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:attribute[@name='meanWindDirection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The observed average wind direction from which the wind is blowing over the past ten minutes.  Not reported when winds are variable.

Wind direction shall be given in degrees from true North. Plane angle unit of measure (uom) is "deg".  A true north wind is indicated with a direction of 360. Calm wind is indicated with a direction of 0.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:sequence/xs:element[@name='meanWindSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:attribute[@name='meanWindSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The average observed wind speed over the past ten minutes

ICAO Annex 3 / WMO No. 49-2:
Section 4.1.5.2a

Wind speeds shall be provided in either two units of measures: "m/s" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:sequence/xs:element[@name='meanWindSpeedOperator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:attribute[@name='meanWindSpeedOperator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indication that the mean wind speed is above or below the reported value.  To report a wind speed of at least 49 meters per second, wind speed is reported as 49 meters per second and the operator is reported as "above".

When no operator is reported, wind speed is an exact value with identical semantics to other measured quantities.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:sequence/xs:element[@name='windGustSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:attribute[@name='windGustSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Variations from the mean wind speed (gusts) during the past 10 minutes.

ICAO Annex 3 / WMO No. 49-2:
Section 4.1.5.2c

Wind gusts shall be provided in either two units of measures: "m/s" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:sequence/xs:element[@name='windGustSpeedOperator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:attribute[@name='windGustSpeedOperator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indication that the wind gust speed is above or below the reported value.  To report a wind gust speed of at least 49 meters per second, wind gust speed is reported as 49 meters per second and the operator is reported as "above".

When no operator is reported, wind gust speed is an exact value with identical semantics to other measured quantities.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:sequence/xs:element[@name='extremeClockwiseWindDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:attribute[@name='extremeClockwiseWindDirection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The extreme clockwise direction from which the wind has varied, inclusive.

This corresponds to the dxdxdx part of the reported variation dndndnVdxdxdx in TAC.

ICAO Annex 3 / WMO No. 49-2:
Section 4.1.5.2b 1)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:sequence/xs:element[@name='extremeCounterClockwiseWindDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:attribute[@name='extremeCounterClockwiseWindDirection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The extreme counter-clockwise direction from which the wind has varied, inclusive.

This corresponds to the dndndn part of the reported variation dndndnVdxdxdx in TAC.

ICAO Annex 3 / WMO No. 49-2:
Section 4.1.5.2b 1)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:sequence/xs:element[@name='variableWindDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindType']//xs:attribute[@name='variableWindDirection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When true, indicates that the wind direction is variable.  A wind direction value may still be reported</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeHorizontalVisibilityType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeHorizontalVisibility'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeHorizontalVisibilityType']//xs:sequence/xs:element[@name='prevailingVisibility']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeHorizontalVisibilityType']//xs:attribute[@name='prevailingVisibility']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reported prevailing horizontal visibility at the surface that is representative of the aerodrome.

Measured prevailing horizontal visibility shall be reported in meters ("m") only.

The greatest visibility value, observed in accordance with the definition of "visibility", which is reached within at least half the horizon circle or within at least half of the surface of the aerodrome. These areas could comprise contiguous or non-contiguous sectors.

Note: This value may be assessed by human observation and/or instrumented systems. When instruments are installed, they are
used to obtain the best estimate of the prevailing visibility.

To report a prevailing visibility of at least 10000 meters, prevailing visibility is reported as 10000 meters and the prevailing visibility operator is reported as "above".

ICAO Annex 3 / WMO No. 49-2:
Section 4.2.4.4b</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeHorizontalVisibilityType']//xs:sequence/xs:element[@name='prevailingVisibilityOperator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeHorizontalVisibilityType']//xs:attribute[@name='prevailingVisibilityOperator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reported relational operator for the prevailing horizontal visibility.  When reported, this operator is reported in conjunction with prevailing visibility.

To report a prevailing visibility of at least 10000 meters, prevailing visibility is reported as 10000 meters and the operator is reported as "above".

When no operator is reported, prevailing visibility represents an exact value with identical semantics to other measured quantities</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeHorizontalVisibilityType']//xs:sequence/xs:element[@name='minimumVisibility']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeHorizontalVisibilityType']//xs:attribute[@name='minimumVisibility']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The minimum observed visibility.

Measured minimum visibility shall be reported in meters ("m") only.

ICAO Annex 3 / WMO No. 49-2 Section 4.2.4.4a:
"When the visibility is not the same in different directions and
a) when the lowest visibility is different from the prevailing visibility, and
  1) less than 1500 m or
  2) less than 50 percent of the prevailing visibility and less than 5000 m; the lowest visibility observed should also be reported and,when possible, its general direction in relation to the aerodrome reference point indicated by reference to one of the eight points of the compass. If the lowest visibility is observed in more than one direction, then the most operationally significant direction should be reported; and
b) when the visibility is fluctuating rapidly, and the prevailing visibility cannot be determined, only the lowest visibility
should be reported, with no indication of direction."</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeHorizontalVisibilityType']//xs:sequence/xs:element[@name='minimumVisibilityDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeHorizontalVisibilityType']//xs:attribute[@name='minimumVisibilityDirection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The direction of the minimum visibility relative to the reporting station.  This is optional in cases where minimum visibility is reported but the visibility is fluctuating rapidly.  Minimum visibility is reported in cardinal and inter-cardinal directions (N, NE, E, SE, S, SW, W, and NW)

Direction of minimum visibility shall be given in degrees from true North. Plane angle unit of measure (uom) is "deg".</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ForecastChangeIndicatorType']//xs:sequence/xs:element[@name='BECOMING']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ForecastChangeIndicatorType']//xs:attribute[@name='BECOMING']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When the change is forecast to commence at the beginning of the forecast period and be completed by the end of that period, or when the change is forecast to occur within the forecast period but the time of the change is uncertain (possibly shortly after the beginning of the forecast period, or midway or near the end of that period), the change is indicated by only the change indicator BECMG.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ForecastChangeIndicatorType']//xs:sequence/xs:element[@name='TEMPORARY_FLUCTUATIONS']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ForecastChangeIndicatorType']//xs:attribute[@name='TEMPORARY_FLUCTUATIONS']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The change indicator TEMPO is used to describe expected temporary fluctuations to meteorological conditions which reach or pass specified threshold criteria and last for a period of less than one hour in each instance and in the aggregate cover less than half of the forecast period during which the fluctuations are expected to occur.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element MeteorologicalAerodromeForecast'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which the reported phenomena or change of phenomena occur.  For change indicators of FROM, PROB 30/40, and TEMPO this is the period of time at which reported meteorological conditions occur.  For BECOMING conditions this represents the time over which conditions are changing.  This is equivalent to how time information is reported in the TAC codes</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:sequence/xs:element[@name='prevailingVisibility']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:attribute[@name='prevailingVisibility']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The prevailing horizontal visibility, mandatory except when ceiling and visibility is reported as OK

Prevailing horizontal visibility shall be reported in meters ("m").</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:sequence/xs:element[@name='prevailingVisibilityOperator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:attribute[@name='prevailingVisibilityOperator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reported relational operator for the prevailing horizontal visibility.  When reported, this operator is reported in conjunction with prevailing visibility.

To report a prevailing visibility of at least 10000 meters, prevailing visibility is reported as 10000 meters and the operator is reported as "above".

When no operator is reported, prevailing visibility represents an exact value with identical semantics to other measured quantities</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:sequence/xs:element[@name='changeIndicator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:attribute[@name='changeIndicator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The type of change being reported (FROM, BECOMING,  TEMPORARY, etc.).

A change indicator is required for all MeteorologicalAerodromeForecasts excepting reported base conditions.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:sequence/xs:element[@name='cloudAndVisibilityOK']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalAerodromeForecastType']//xs:attribute[@name='cloudAndVisibilityOK']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When true, indicates that the following conditions occur simultaneously at the time of forecast (also know as "CAVOK"):

a) visibility, 10km or more, and the lowest visibility is not reported
b) no cloud of operational significance
c) no weather of significance to aviation

Information on visibility, runway visual range, present weather and cloud amount, cloud type and height of cloud base shall not be reported.  See ICAO Annex 3 / WMO No. 49-2 Section 2.2.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeAirTemperatureForecastType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeAirTemperatureForecast'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeAirTemperatureForecastType']//xs:sequence/xs:element[@name='maximumAirTemperature']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeAirTemperatureForecastType']//xs:attribute[@name='maximumAirTemperature']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The maximum air temperature expressed in degrees Celsius ("Cel")

ICAO Annex 3 / WMO No. 49-2:
"TX"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeAirTemperatureForecastType']//xs:sequence/xs:element[@name='maximumAirTemperatureTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeAirTemperatureForecastType']//xs:attribute[@name='maximumAirTemperatureTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time of occurrence of the maximum air temperature.  This must be within the period of the phenomenon time for this forecast record

ICAO Annex 3 / WMO No. 49-2:
"TX"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeAirTemperatureForecastType']//xs:sequence/xs:element[@name='minimumAirTemperature']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeAirTemperatureForecastType']//xs:attribute[@name='minimumAirTemperature']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The minimum air temperature expressed in degrees Celsius ("Cel")

ICAO Annex 3 / WMO No. 49-2:
"TN"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeAirTemperatureForecastType']//xs:sequence/xs:element[@name='minimumAirTemperatureTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeAirTemperatureForecastType']//xs:attribute[@name='minimumAirTemperatureTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time of occurrence of the minimum air temperature.  This must be within the period of the phenomenon time for this forecast record

ICAO Annex 3 / WMO No. 49-2:
"TN"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:sequence/xs:element[@name='BECOMING']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:attribute[@name='BECOMING']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Conditions are expected to reach or pass through specified threshold values at a regular or irregular rate and at an unspecified time during the time period.  The time period should normally not exceed 2 hours but in any case should not exceed 4 hours.

ICAO Annex 3 / WMO No. 49-2:
"BECMG"
</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:sequence/xs:element[@name='TEMPORARY_FLUCTUATIONS']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:attribute[@name='TEMPORARY_FLUCTUATIONS']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Expected temporary fluctuations to meteorological conditions which reach or pass specified threshold criteria and last for a period of less than one hour in each instance and in the aggregate cover less than half of the forecast period during which the fluctuations are expected to occur.

ICAO Annex 3 / WMO No. 49-2:
"TEMPO"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:sequence/xs:element[@name='FROM']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:attribute[@name='FROM']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">One set of prevailing weather conditions is expected to change significantly and more or less completely to a different set of conditions. Conditions in a FROM group supersede conditions in earlier groups.

ICAO Annex 3 / WMO No. 49-2:
"FM"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:sequence/xs:element[@name='PROBABILITY_30']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:attribute[@name='PROBABILITY_30']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A 30% probability of occurrence of an alternative value of a forecast element or elements.

ICAO Annex 3 / WMO No. 49-2:
"PROB30"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:sequence/xs:element[@name='PROBABILITY_30_TEMPORARY_FLUCTUATIONS']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:attribute[@name='PROBABILITY_30_TEMPORARY_FLUCTUATIONS']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A 30% probability of occurrence of temporary conditions of an alternative value of a forecast element or elements.

ICAO Annex 3 / WMO No. 49-2:
"PROB30 TEMPO"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:sequence/xs:element[@name='PROBABILITY_40']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:attribute[@name='PROBABILITY_40']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A 40% probability of occurrence of an alternative value of a forecast element or elements.

ICAO Annex 3 / WMO No. 49-2:
"PROB40"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:sequence/xs:element[@name='PROBABILITY_40_TEMPORARY_FLUCTUATIONS']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeForecastChangeIndicatorType']//xs:attribute[@name='PROBABILITY_40_TEMPORARY_FLUCTUATIONS']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A 40% probability of occurrence of temporary conditions of an alternative value of a forecast element or elements.

ICAO Annex 3 / WMO No. 49-2:
"PROB40 TEMPO"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element TAF'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:sequence/xs:element[@name='issueTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:attribute[@name='issueTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which this report was issued.  Note that this should be identical to the resultTime of each MeteorologicalAerodromeForecast, whose results are made available at the same time as this report.  TAF reports have an issueTime to assist in discovery and to provide unambiguous semantics at the report level.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:sequence/xs:element[@name='aerodrome']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:attribute[@name='aerodrome']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The aerodrome location for this report</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:sequence/xs:element[@name='validPeriod']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:attribute[@name='validPeriod']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time frame at which this report is valid.  All forecast elements should be valid within this period</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:sequence/xs:element[@name='cancelledReportValidPeriod']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:attribute[@name='cancelledReportValidPeriod']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The valid time period for the previously cancelled report</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:sequence/xs:element[@name='baseForecast']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:attribute[@name='baseForecast']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The prevailing conditions.  Mandatory in all cases except missing or cancelled reports</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:sequence/xs:element[@name='changeForecast']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:attribute[@name='changeForecast']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Forecast that modifies the base forecast.  While there is no maximum number of forecasts, this should normally not exceed five in number. ICAO Annex 3 / WMO No. 49-2: Section 1.5: "The number of change and probability groups should be kept to a minimum and should not normally exceed five groups".</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:sequence/xs:element[@name='isCancelReport']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TAFType']//xs:attribute[@name='isCancelReport']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicates whether the report is a 'CANCELLATION' report (true) which cancels a previously issued report or not (false or empty).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETExpectedIntensityChangeType']//xs:sequence/xs:element[@name='NO_CHANGE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETExpectedIntensityChangeType']//xs:attribute[@name='NO_CHANGE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">No change (NC)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETExpectedIntensityChangeType']//xs:sequence/xs:element[@name='WEAKEN']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETExpectedIntensityChangeType']//xs:attribute[@name='WEAKEN']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Forecast to weaken (WKN)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETExpectedIntensityChangeType']//xs:sequence/xs:element[@name='INTENSIFY']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETExpectedIntensityChangeType']//xs:attribute[@name='INTENSIFY']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Forecast to intensify (INTSF)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element SIGMETPosition'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionType']//xs:sequence/xs:element[@name='geometry']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionType']//xs:attribute[@name='geometry']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The geographic region affected by the reported phenomenon at a particular time (thunderstorms, volcanic ash, etc.).  This geometry covers all combinations of phenomenon historically reported in Annex 3: a boundary with a base and top, a TC centre position, and a VA line with a width</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionType']//xs:sequence/xs:element[@name='approximateLocation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionType']//xs:attribute[@name='approximateLocation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicator of whether the location of phenomena is approximate. If not reported locations are not approximate</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionCollectionType']//xs:sequence/xs:element[(@name='member' and 'member' != '') or (@name='SIGMETPosition' and 'SIGMETPosition' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element SIGMET'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='issueTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='issueTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which this report was issued</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='issuingAirTrafficServicesUnit']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='issuingAirTrafficServicesUnit']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The ATS unit serving the FIR or CTA to which the SIGMET refers

ICAO Annex 3 / WMO No. 49-2:
A6-1: "Location indicator of FIR/CTA"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='originatingMeteorologicalWatchOffice']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='originatingMeteorologicalWatchOffice']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">MWO originating this report</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='issuingAirTrafficServicesRegion']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='issuingAirTrafficServicesRegion']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The ATS region (FIR, UIR, CTA, or FIR/UIR)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='sequenceNumber']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='sequenceNumber']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The sequence number of this message.  For example: "5", "A3", or "2"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='validPeriod']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='validPeriod']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The valid period for the entire report covering all observations and forecast conditions.  Each observation/forecast phenomenon includes its own temporal description for the described meteorological conditions, which is represented as phenomenonTime.

For example, an issued tropical cyclone SIGMET may be valid from 1600 UTC to 2200 UTC with an observed position at 1600 UTC and a forecast position of the centre of the tropical cyclone at 2200 UTC.  In this case the SIGMET validPeriod would be 1600 UTC to 2200 UTC, the analysis phenomenonTime would be 1600 UTC, and the forecastPositionAnalysis phenomenonTime would be 2200 UTC.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='cancelledReportSequenceNumber']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='cancelledReportSequenceNumber']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The sequence number of a previous SIGMET that is cancelled by this SIGMET.  Mandatory when this is a cancellation report, must be missing otherwise

Examples:
YUDD SIGMET 2 VALID ...
YUDD SIGMET A3 VALID ...</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='cancelledReportValidPeriod']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='cancelledReportValidPeriod']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The valid period of a previous SIGMET that is cancelled by this SIGMET.  Mandatory when this is a cancellation report, must be missing otherwise</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='phenomenon']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='phenomenon']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reported phenomenon, such as thunderstorm, tropical cyclone, icing, mountain wave, etc.

The expected end of occurrence of volcanic ash ("NO VA EXP") is indicated with a missing SIGMET phenomenon with a nil reason of nothingOfOperationalSignificance</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='analysisCollection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='analysisCollection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Observed and/or forecast conditions of the phenomenon.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:sequence/xs:element[@name='isCancelReport']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETType']//xs:attribute[@name='isCancelReport']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicates whether the report is a 'CANCELLATION' report (true) which cancels a previously issued report or not (false or empty).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element SIGMETEvolvingCondition'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:sequence/xs:element[@name='geometry']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:attribute[@name='geometry']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The expected geographic region(s) affected by the reported phenomenon at a particular time (thunderstorms, volcanic ash, etc.).  This geometry covers all combinations of phenomenon historically reported in ICAO Annex 3 / WMO No. 49-2: a boundary with a base and top, a TC centre position, and a VA line with a width</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:sequence/xs:element[@name='directionOfMotion']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:attribute[@name='directionOfMotion']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">This element refers to the expected direction of movement which the phenomenon is moving towards, .e.g, "moving east". When no movement is expected, this is a http://codes.wmo.int/common/nil/inapplicable nilReason and the speedOfMotion will be 0.

This element value is given in degrees from true North. Plane angle unit of measure (uom) is "deg". </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:sequence/xs:element[@name='speedOfMotion']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:attribute[@name='speedOfMotion']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The expected speed of movement of a meteorological condition. When no movement is expected, this will have a value of 0 and directionOfMotion will have a http://codes.wmo.int/common/nil/inapplicable nilReason.

speedOfMotion can be provided in either two units of measures: "km/h" or "[kn_i]" (knots).
</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:sequence/xs:element[@name='intensityChange']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:attribute[@name='intensityChange']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The expected change in intensity for the reported meteorological condition (e.g., intensifying, weakening, or no change) determined at the time of SIGMET analysis based on the current state of the meteorological condition</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:sequence/xs:element[@name='approximateLocation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionType']//xs:attribute[@name='approximateLocation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicator of whether the location of phenomena is approximate. If not reported locations are not approximate</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionCollectionType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element SIGMETEvolvingConditionCollection'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionCollectionType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionCollectionType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which meteorological phenomena occur</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionCollectionType']//xs:sequence/xs:element[@name='tropicalCyclonePosition']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionCollectionType']//xs:attribute[@name='tropicalCyclonePosition']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The position of a tropical cyclone.  Only be used in a TropicalCycloneSIGMET.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionCollectionType']//xs:sequence/xs:element[@name='timeIndicator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETEvolvingConditionCollectionType']//xs:attribute[@name='timeIndicator']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indication whether the information is observed and expected to continue, or forecast</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneSIGMETType']//xs:sequence/xs:element[@name='supplementaryAnalysisCollection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneSIGMETType']//xs:attribute[@name='supplementaryAnalysisCollection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Observed and/or forecast conditions of the cumulonimbus clouds associated with a tropical cyclone.  To be used for more than one cumulonimbus clouds simultaneously affecting the FIR concerned.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneSIGMETType']//xs:sequence/xs:element[@name='tropicalCyclone']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneSIGMETType']//xs:attribute[@name='tropicalCyclone']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The tropical cyclone being reported in this SIGMET, required in all cases other than cancellations. When reporting the tropical cyclone name, 'NN' may be used if the tropical cyclone is unnamed</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='analysisAndForecastPositionAnalysisType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element analysisAndForecastPositionAnalysis'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='analysisAndForecastPositionAnalysisType']//xs:sequence/xs:element[@name='analysis']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='analysisAndForecastPositionAnalysisType']//xs:attribute[@name='analysis']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A SIGMET report may include, at a time instant, a phenomenon covering more than one area within the FIR/UIR/CTA.  This translates into observed or forecast conditions at the time instant for each of these reported areas.  All combinations of observations or forecasts of meteorological conditions, including changing conditions, are represented by their own SIGMETEvolvingCondition.

Each analysis has a single SIGMETEvolvingConditionCollection as its result.  </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='analysisAndForecastPositionAnalysisType']//xs:sequence/xs:element[@name='forecastPositionAnalysis']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='analysisAndForecastPositionAnalysisType']//xs:attribute[@name='forecastPositionAnalysis']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A forecast of the phenomenon at a time instant within the valid period.  This is modeled by SIGMETPosition for individual area of the phenomenon and aggregated into a single SIGMETPositionCollection as a result to forecastPositionAnalysis.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshSIGMETType']//xs:sequence/xs:element[@name='supplementaryAnalysisCollection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshSIGMETType']//xs:attribute[@name='supplementaryAnalysisCollection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Observed and/or forecast conditions of the volcanic ash clouds.  To be used for more than one volcanic ash clouds simultaneously affecting the FIR concerned.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshSIGMETType']//xs:sequence/xs:element[@name='eruptingVolcano']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshSIGMETType']//xs:attribute[@name='eruptingVolcano']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The volcano that is erupting - required in all cases other than cancellations</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshSIGMETType']//xs:sequence/xs:element[@name='volcanicAshMovedToFIR']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshSIGMETType']//xs:attribute[@name='volcanicAshMovedToFIR']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The FIR to which volcanic ash has moved.  Reported only on SIGMET cancellation reports</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionCollectionType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element SIGMETPositionCollection'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionCollectionType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionCollectionType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which meteorological phenomena occur</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionCollectionType']//xs:sequence/xs:element[@name='tropicalCyclonePosition']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SIGMETPositionCollectionType']//xs:attribute[@name='tropicalCyclonePosition']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The position of a tropical cyclone.  Only be used in a TropicalCycloneSIGMET.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionCollectionType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AIRMETEvolvingConditionCollection'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionCollectionType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionCollectionType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which meteorological phenomena occur</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionCollectionType']//xs:sequence/xs:element[@name='timeIndicator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionCollectionType']//xs:attribute[@name='timeIndicator']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indication whether the information is observed and expected to continue, or forecast</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETExpectedIntensityChangeType']//xs:sequence/xs:element[@name='NO_CHANGE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETExpectedIntensityChangeType']//xs:attribute[@name='NO_CHANGE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">No change (NC)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETExpectedIntensityChangeType']//xs:sequence/xs:element[@name='WEAKEN']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETExpectedIntensityChangeType']//xs:attribute[@name='WEAKEN']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Forecast to weaken (WKN)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETExpectedIntensityChangeType']//xs:sequence/xs:element[@name='INTENSIFY']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETExpectedIntensityChangeType']//xs:attribute[@name='INTENSIFY']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Forecast to intensify (INTSF)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AIRMETEvolvingCondition'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='geometry']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='geometry']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The expected geographic region(s) affected by the reported phenomenon at a particular time (thunderstorms, volcanic ash, etc.).  This geometry covers all combinations of phenomenon historically reported in ICAO Annex 3 / WMO No. 49-2: a boundary with a base and top, a TC centre position, and a VA line with a width</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='directionOfMotion']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='directionOfMotion']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The expected direction of movement of a meteorological condition. When no movement is expected, this is a http://codes.wmo.int/common/nil/inapplicable nilReason and the speedOfMotion will be 0.  Direction of motion to shall be given in degrees from true North. Plane angle unit of measure (uom) is "deg".</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='speedOfMotion']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='speedOfMotion']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The expected speed of movement of a meteorological condition. When no movement is expected, this will have a value of 0 and directionOfMotion will have a http://codes.wmo.int/common/nil/inapplicable nilReason. Speed of movement shall be given in either "km/h" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='intensityChange']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='intensityChange']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The expected change in intensity for the reported meteorological condition (e.g., intensifying, weakening, or no change) determined at the time of AIRMET analysis based on the current state of the meteorological condition</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='cloudBase']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:copy-of select="@*"/>
         <xsl:element name="annotation">
            <xsl:copy-of select="./xs:annotation/@*"/>
            <xsl:apply-templates select="./xs:annotation/*"/>
            <xsl:element name="appinfo">
               <xsl:element name="quantity">http://codes.wmo.int/common/quantity-kind/heightOfBaseOfCloud</xsl:element>
            </xsl:element>
         </xsl:element>
         <xsl:apply-templates select="./*[not(name() = 'xs:annotation')]"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='cloudBase']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The cloud base of reported clouds.  Only used with an AIRMET reporting cloud phenomenon.  Height of cloud base shall be given in either "m" (metres) or "[ft_i]" (feet).

Cloud base and top may differ from but should be within the AIRMET base and top which are reported in airspace upper and lower limits.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='cloudBaseReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='cloudBaseReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reference surface used for the value of the cloud base. For example, Mean Sea Level, Ground, standard pressure,  etc..</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='cloudTop']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:copy-of select="@*"/>
         <xsl:element name="annotation">
            <xsl:copy-of select="./xs:annotation/@*"/>
            <xsl:apply-templates select="./xs:annotation/*"/>
            <xsl:element name="appinfo">
               <xsl:element name="quantity">http://codes.wmo.int/common/quantity-kind/heightOfTopOfCloud</xsl:element>
            </xsl:element>
         </xsl:element>
         <xsl:apply-templates select="./*[not(name() = 'xs:annotation')]"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='cloudTop']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The cloud top of reported clouds.  Only used with an AIRMET reporting cloud phenomenon.  Height of cloud top shall be given in either "m" (metres) or "[ft_i]" (feet).

Cloud base and top may differ from but should be within the AIRMET base and top which are reported in airspace upper and lower limits.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='cloudTopReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='cloudTopReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reference surface used for the value of the cloud base. For example, Mean Sea Level, Ground, standard pressure,  etc..</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='cloudTopAbove']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='cloudTopAbove']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicates whether the cloud top is above the reported values.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='surfaceVisibility']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:copy-of select="@*"/>
         <xsl:element name="annotation">
            <xsl:copy-of select="./xs:annotation/@*"/>
            <xsl:apply-templates select="./xs:annotation/*"/>
            <xsl:element name="appinfo">
               <xsl:element name="quantity">http://codes.wmo.int/common/quantity-kind/aeronauticalPrevailingHorizontalVisibility</xsl:element>
            </xsl:element>
         </xsl:element>
         <xsl:apply-templates select="./*[not(name() = 'xs:annotation')]"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='surfaceVisibility']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The surface visibility.  Only used with SFC VIS AIRMETs. Horizontal surface visibility unit of measure shall be given as "m" (metre).

ICAO Annex 3 / WMO No. 49-2:
Appendix 6 Section 2.1</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='surfaceVisibilityCause']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='surfaceVisibilityCause']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The weather condition(s) causing reduced visibility.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='surfaceWindDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='surfaceWindDirection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The widespread surface wind direction.  Only used with SFC WIND AIRMETs. Unit of measure shall be given as "deg" in degrees from true North.  A true north wind is indicated with a direction of 360.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='surfaceWindSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:copy-of select="@*"/>
         <xsl:element name="annotation">
            <xsl:copy-of select="./xs:annotation/@*"/>
            <xsl:apply-templates select="./xs:annotation/*"/>
            <xsl:element name="appinfo">
               <xsl:element name="quantity">http://codes.wmo.int/common/quantity-kind/windSpeed</xsl:element>
            </xsl:element>
         </xsl:element>
         <xsl:apply-templates select="./*[not(name() = 'xs:annotation')]"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='surfaceWindSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The widespread surface wind speed.  Only used with SFC WIND AIRMETs. Surface wind speed unit of measure shall be given as "m/s" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:sequence/xs:element[@name='approximateLocation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETEvolvingConditionType']//xs:attribute[@name='approximateLocation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicator of whether the location of phenomena is approximate. If not reported locations are not approximate</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AIRMET'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='issueTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='issueTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which this report was issued</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='issuingAirTrafficServicesUnit']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='issuingAirTrafficServicesUnit']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The ATS unit serving the FIR or CTA to which the AIRMET refers.  ICAO Annex 3 / WMO No. 49-2: A6-1: "Location indicator of FIR/CTA"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='originatingMeteorologicalWatchOffice']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='originatingMeteorologicalWatchOffice']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">MWO originating this report</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='issuingAirTrafficServicesRegion']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='issuingAirTrafficServicesRegion']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The ATS region (FIR, UIR, CTA, or FIR/UIR)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='sequenceNumber']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='sequenceNumber']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The sequence number of this message.  For example: "5", "A3", or "2"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='validPeriod']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='validPeriod']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The valid period for the entire report, including all observations and forecast conditions.  Each observation/forecast phenomenon includes its own period of validity for described meteorological conditions, which is represented as the O&amp;amp;M Observation validTime.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='cancelledReportSequenceNumber']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='cancelledReportSequenceNumber']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The sequence number of a previous AIRMET that is cancelled by this AIRMET.  Mandatory when this is a cancellation report, must be missing otherwise

Examples:
YUDD AIRMET 2 VALID ...
YUDD AIRMET A3 VALID ...</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='cancelledReportValidPeriod']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='cancelledReportValidPeriod']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The valid period of a previous AIRMET that is cancelled by this AIRMET.  Mandatory when this is a cancellation report, must be missing otherwise</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='phenomenon']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='phenomenon']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The reported phenomenon, such as thunderstorm, tropical cyclone, icing, mountain wave, etc.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='analysis']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='analysis']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">AIRMETs may include the same phenomenon covering more than one area within the FIR/UIR/CTA, as well as observed and forecast conditions for each of these reported areas.  AIRMETs may include a single set of observed and/or forecast conditions at a particular time, which is represented  as a single analysis with a single AIRMETEvolvingConditionCollection as its result.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:sequence/xs:element[@name='isCancelReport']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AIRMETType']//xs:attribute[@name='isCancelReport']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicates whether the report is a 'CANCELLATION' report (true) which cancels a previously issued report or not (false or empty).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneForecastConditionsType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element TropicalCycloneForecastConditions'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneForecastConditionsType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneForecastConditionsType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which meteorological phenomena occur</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneForecastConditionsType']//xs:sequence/xs:element[@name='tropicalCyclonePosition']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneForecastConditionsType']//xs:attribute[@name='tropicalCyclonePosition']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The tropical cyclone position</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneForecastConditionsType']//xs:sequence/xs:element[@name='maximumSurfaceWindSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneForecastConditionsType']//xs:attribute[@name='maximumSurfaceWindSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The maximum 10-minute mean surface wind speed near the centre of the tropical cyclone which shall be provided in either two units of measures: "m/s" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneIntensityChangeType']//xs:sequence/xs:element[@name='NO_CHANGE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneIntensityChangeType']//xs:attribute[@name='NO_CHANGE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">No change in intensity</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneIntensityChangeType']//xs:sequence/xs:element[@name='WEAKEN']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneIntensityChangeType']//xs:attribute[@name='WEAKEN']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Tropical cyclone has weakened</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneIntensityChangeType']//xs:sequence/xs:element[@name='INTENSIFY']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneIntensityChangeType']//xs:attribute[@name='INTENSIFY']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Tropical cyclone has intensified</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element TropicalCycloneAdvisory'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:sequence/xs:element[@name='issueTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:attribute[@name='issueTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which this advisory was issued</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:sequence/xs:element[@name='issuingTropicalCycloneAdvisoryCentre']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:attribute[@name='issuingTropicalCycloneAdvisoryCentre']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The issuing TCAC</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:sequence/xs:element[@name='tropicalCycloneName']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:attribute[@name='tropicalCycloneName']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The tropical cyclone name.  If the tropical cyclone is unnamed, 'NN' may be used</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:sequence/xs:element[@name='advisoryNumber']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:attribute[@name='advisoryNumber']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Advisory number: year in full and message number (separate sequence for each cyclone)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:sequence/xs:element[@name='observation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:attribute[@name='observation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The observed conditions of the tropical cyclone</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:sequence/xs:element[@name='forecast']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:attribute[@name='forecast']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The forecast conditions of the tropical cyclone at given time intervals.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:sequence/xs:element[@name='remarks']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:attribute[@name='remarks']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Remarks, as necessary.

When the remark is nil, it should be indicated by a missing remarks with a nil reason of 'inapplicable'</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:sequence/xs:element[@name='nextAdvisoryTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneAdvisoryType']//xs:attribute[@name='nextAdvisoryTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which the next advisory is expected to be issued.

Use attribute indeterminatePosition to element timePosition to indicate if the actual temporal position is before or after the specified value.

When no subsequent advisory is expected to be issued it should be indicated by a missing expected advisory time with a nil reason of 'inapplicable'</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element TropicalCycloneObservedConditions'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which meteorological phenomena occur</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence/xs:element[@name='tropicalCyclonePosition']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:attribute[@name='tropicalCyclonePosition']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The tropical cyclone position</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence/xs:element[@name='cumulonimbusCloudLocation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:attribute[@name='cumulonimbusCloudLocation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Location of cumulonimbus cloud</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence/xs:element[@name='movement']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:attribute[@name='movement']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The movement observed for the tropical cyclone</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence/xs:element[@name='movementDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:attribute[@name='movementDirection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The movement direction observed.  Only reported when the tropical cyclone is moving at least 2 km/h or 1 knot. Direction of movement shall be given in degrees from true North. Plane angle unit of measure (uom) is "deg".</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence/xs:element[@name='movementSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:attribute[@name='movementSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The movement speed observed.  Only reported when the tropical cyclone is moving at least 2 km/h or 1 knot.  Speed of movement shall be provided in either two units of measures: "km/h" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence/xs:element[@name='intensityChange']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:attribute[@name='intensityChange']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Changes of maximum surface wind speed at time of observation.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence/xs:element[@name='centralPressure']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:attribute[@name='centralPressure']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The central pressure of the tropical cyclone.  Central pressure of cyclone shall be provided in hectoPascals (hPa).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:sequence/xs:element[@name='maximumSurfaceWindSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneObservedConditionsType']//xs:attribute[@name='maximumSurfaceWindSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The maximum 10-minute mean surface wind speed near the centre of the tropical cyclone which shall be provided in either two units of measures: "m/s" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneMovementType']//xs:sequence/xs:element[@name='MOVING']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneMovementType']//xs:attribute[@name='MOVING']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The tropical cyclone is moving and will be reported with the associated movement speed and direction</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneMovementType']//xs:sequence/xs:element[@name='STATIONARY']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneMovementType']//xs:attribute[@name='STATIONARY']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The tropical cyclone is stationary (&amp;lt; 2 km/h or 1 kt) and will not have a reported movement speed or direction</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastStatusType']//xs:sequence/xs:element[@name='PROVIDED']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastStatusType']//xs:attribute[@name='PROVIDED']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Information is provided.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastStatusType']//xs:sequence/xs:element[@name='NO_VOLCANIC_ASH_EXPECTED']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastStatusType']//xs:attribute[@name='NO_VOLCANIC_ASH_EXPECTED']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">No volcanic ash is expected.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastStatusType']//xs:sequence/xs:element[@name='NOT_AVAILABLE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastStatusType']//xs:attribute[@name='NOT_AVAILABLE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Information is not available.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastStatusType']//xs:sequence/xs:element[@name='NOT_PROVIDED']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastStatusType']//xs:attribute[@name='NOT_PROVIDED']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Information is not provided.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudObservedOrEstimatedType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element VolcanicAshCloudObservedOrEstimated'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudObservedOrEstimatedType']//xs:sequence/xs:element[@name='ashCloudExtent']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudObservedOrEstimatedType']//xs:attribute[@name='ashCloudExtent']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The horizontal and vertical extent of the ash cloud.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudObservedOrEstimatedType']//xs:sequence/xs:element[@name='directionOfMotion']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudObservedOrEstimatedType']//xs:attribute[@name='directionOfMotion']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The direction of movement of the ash cloud.   Direction of movement of the ash cloud is moving to shall be given in degrees from true North. Plane angle unit of measure (uom) is "deg".</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudObservedOrEstimatedType']//xs:sequence/xs:element[@name='speedOfMotion']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudObservedOrEstimatedType']//xs:attribute[@name='speedOfMotion']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The speed of motion of the ash cloud.  Speed of movement of ash cloud shall be given in either "km/h" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedConditionsType']//xs:sequence/xs:element[(@name='ashCloud' and 'ashCloud' != '') or (@name='VolcanicAshCloudObservedOrEstimated' and 'VolcanicAshCloudObservedOrEstimated' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedStatusType']//xs:sequence/xs:element[@name='IDENTIFIABLE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedStatusType']//xs:attribute[@name='IDENTIFIABLE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Volcanic ash identifiable.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedStatusType']//xs:sequence/xs:element[@name='NOT_IDENTIFIABLE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedStatusType']//xs:attribute[@name='NOT_IDENTIFIABLE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Volcanic ash not identifiable from satellite data</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element VolcanicAshAdvisory'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='issueTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='issueTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which this report was issued</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='issuingVolcanicAshAdvisoryCentre']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='issuingVolcanicAshAdvisoryCentre']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The issuing VAAC</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='volcano']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='volcano']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The erupting volcano that is the source of volcanic ash</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='stateOrRegion']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='stateOrRegion']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">State, or region if ash is not reported over a State</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='summitElevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='summitElevation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Elevation of the summit.  If reported it shall either be in meters ("m") or feet ("[ft_i]").

When the elevation is unknown, it shall be empty with a nil reason of 'unknown'.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='advisoryNumber']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='advisoryNumber']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Advisory number: year in full and message number (separate sequence for each volcano)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='informationSource']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='informationSource']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Information source - described in free text</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='colourCode']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='colourCode']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The aviation colour code</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='eruptionDetails']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='eruptionDetails']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Eruption details (excluding date/time of eruption(s)).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='observation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='observation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The observed (or estimated) conditions of volcanic ash clouds.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='forecast']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='forecast']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The forecast conditions of volcanic ash clouds.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='remarks']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='remarks']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Remarks, as necessary.

When the remark is nil, it should be indicated by a missing remarks with a nil reason of 'inapplicable'</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:sequence/xs:element[@name='nextAdvisoryTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshAdvisoryType']//xs:attribute[@name='nextAdvisoryTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which the next advisory will be issued

Use attribute indeterminatePosition to element timePosition to indicate if the actual temporal position is before or after the specified value.

When no subsequent advisory is expected to be issued it should be indicated by a missing expected advisory time with a nil reason of 'inapplicable'
</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WindObservedOrEstimatedType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element WindObservedOrEstimated'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WindObservedOrEstimatedType']//xs:sequence/xs:element[@name='verticalLayer']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WindObservedOrEstimatedType']//xs:attribute[@name='verticalLayer']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical layer in terms of flight levels in which wind is provided.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WindObservedOrEstimatedType']//xs:sequence/xs:element[@name='windDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WindObservedOrEstimatedType']//xs:attribute[@name='windDirection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Wind direction within the layer.  It shall be given in degrees from true North. Plane angle unit of measure (uom) is "deg".</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WindObservedOrEstimatedType']//xs:sequence/xs:element[@name='windSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WindObservedOrEstimatedType']//xs:attribute[@name='windSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Wind speed within the layer.  Unit of measure shall be given in "m/s" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WindObservedOrEstimatedType']//xs:sequence/xs:element[@name='variableWindDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WindObservedOrEstimatedType']//xs:attribute[@name='variableWindDirection']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">When true, indicates that the wind direction is variable.  Wind direction should not be reported</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshForecastConditionsType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element VolcanicAshForecastConditions'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshForecastConditionsType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshForecastConditionsType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The day and time (in UTC) of forecast of volcanic ash</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshForecastConditionsType']//xs:sequence/xs:element[@name='status']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshForecastConditionsType']//xs:attribute[@name='status']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The status of volcanic ash cloud forecast.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshForecastConditionsType']//xs:sequence/xs:element[(@name='ashCloud' and 'ashCloud' != '') or (@name='VolcanicAshCloudForecast' and 'VolcanicAshCloudForecast' != '')]">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element VolcanicAshCloudForecast'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastType']//xs:sequence/xs:element[@name='ashCloudExtent']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshCloudForecastType']//xs:attribute[@name='ashCloudExtent']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The horizontal and vertical extent of the ash cloud.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedConditionsType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element VolcanicAshObservedOrEstimatedConditions'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedConditionsType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedConditionsType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The day and time (in UTC) of observation (or estimation) of volcanic ash</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedConditionsType']//xs:sequence/xs:element[@name='isEstimated']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedConditionsType']//xs:attribute[@name='isEstimated']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicates whether the characteristics of the phenomenon is observed (empty or false) or estimated (true).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedConditionsType']//xs:sequence/xs:element[@name='status']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanicAshObservedOrEstimatedConditionsType']//xs:attribute[@name='status']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Volcanic ash observation (or estimation) status.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherRegionType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element SpaceWeatherRegion'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherRegionType']//xs:sequence/xs:element[@name='location']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherRegionType']//xs:attribute[@name='location']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The geographic location at which space weather phenomena occur</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherRegionType']//xs:sequence/xs:element[@name='locationIndicator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherRegionType']//xs:attribute[@name='locationIndicator']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The geographic area code, such as high northern latitudes</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element SpaceWeatherAdvisory'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:sequence/xs:element[@name='issueTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:attribute[@name='issueTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which this report was issued</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:sequence/xs:element[@name='issuingSpaceWeatherCentre']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:attribute[@name='issuingSpaceWeatherCentre']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The issuing space weather centre (SWXC)</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:sequence/xs:element[@name='advisoryNumber']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:attribute[@name='advisoryNumber']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Advisory number: four digit year and unique message number.  Example "2018/1"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:sequence/xs:element[@name='replacedAdvisoryNumber']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:attribute[@name='replacedAdvisoryNumber']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The number of the advisory being replaced.  Example "2018/1"</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:sequence/xs:element[@name='phenomenon']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:attribute[@name='phenomenon']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The space weather phenomenon, such as radiation or satellite communication</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:sequence/xs:element[@name='analysis']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:attribute[@name='analysis']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Observed and forecast space weather information.  Analyses should be reported in the order in which they occur, starting with the initial observed/forecast conditions and proceeding through each subsequent forecast to the end of the period</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:sequence/xs:element[@name='remarks']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:attribute[@name='remarks']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Remarks, as necessary.

When the remark is nil, it should be indicated by a missing remarks with a nil reason of 'inapplicable'</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:sequence/xs:element[@name='nextAdvisoryTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAdvisoryType']//xs:attribute[@name='nextAdvisoryTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which the next advisory will be issued

Use attribute indeterminatePosition to element timePosition to indicate if the actual temporal position is before or after the specified value.

When no subsequent advisory is expected to be issued it should be indicated by a missing expected advisory time with a nil reason of 'inapplicable'
</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAnalysisType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element SpaceWeatherAnalysis'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAnalysisType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAnalysisType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which meteorological phenomena occur</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAnalysisType']//xs:sequence/xs:element[@name='region']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAnalysisType']//xs:attribute[@name='region']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation"/>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAnalysisType']//xs:sequence/xs:element[@name='timeIndicator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='SpaceWeatherAnalysisType']//xs:attribute[@name='timeIndicator']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicator of observed or forecast conditions</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanoType']//xs:sequence/xs:element[@name='name']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='VolcanoType']//xs:attribute[@name='name']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Name of the volcano.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='RadiationIncidentType']//xs:sequence/xs:element[@name='siteName']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='RadiationIncidentType']//xs:attribute[@name='siteName']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Incident location.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='RadiationIncidentType']//xs:sequence/xs:element[@name='incidentTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='RadiationIncidentType']//xs:attribute[@name='incidentTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Incident time.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneType']//xs:sequence/xs:element[@name='name']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TropicalCycloneType']//xs:attribute[@name='name']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Name of the tropical cyclone.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:simpleType[@name='WorldAreaForecastCentreType']">
      <xsl:element name="element">
         <xsl:attribute name="name">
            <xsl:value-of select="'WorldAreaForecastCentre'"/>
         </xsl:attribute>
         <xsl:attribute name="type">
            <xsl:value-of select="'iwxxm:WorldAreaForecastCentreType'"/>
         </xsl:attribute>
      </xsl:element>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WorldAreaForecastCentreType']//xs:sequence/xs:element[@name='London']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WorldAreaForecastCentreType']//xs:attribute[@name='London']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The World Area Forecast Centre (WAFC) operated by the UK Met Office.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WorldAreaForecastCentreType']//xs:sequence/xs:element[@name='Washington']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WorldAreaForecastCentreType']//xs:attribute[@name='Washington']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The World Area Forecast Centre (WAFC) operated by the National Oceanic and Atmospheric Administration (NOAA) in the USA.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:sequence/xs:element[@name='location']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:attribute[@name='location']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Position of the wind symbol.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:sequence/xs:element[@name='windSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:attribute[@name='windSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Horizontal wind speed at the indicated position.

Wind speeds shall be provided in unit of measurer "m/s" (meters per second).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:sequence/xs:element[@name='IsotachUpperElevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:attribute[@name='IsotachUpperElevation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the 80 knot isotach above the jet stream measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:sequence/xs:element[@name='IsotachUpperVerticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:attribute[@name='IsotachUpperVerticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:sequence/xs:element[@name='IsotachLowerElevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:attribute[@name='IsotachLowerElevation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the 80 knot isotach below the jet stream measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:sequence/xs:element[@name='IsotachLowerVerticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSJetStreamWindSymbolType']//xs:attribute[@name='IsotachLowerVerticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WAFSSignificantWeatherForecastType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element WAFSSignificantWeatherForecast'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:sequence/xs:element[@name='upperElevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:attribute[@name='upperElevation']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the upper surface measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:sequence/xs:element[@name='upperVerticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:attribute[@name='upperVerticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:sequence/xs:element[@name='upperInterpretation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:attribute[@name='upperInterpretation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating how a value needs to be interpreted when used as a filter or condition. For example: above the value or below the value. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:sequence/xs:element[@name='lowerElevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:attribute[@name='lowerElevation']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the lower surface measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:sequence/xs:element[@name='lowerVerticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:attribute[@name='lowerVerticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:sequence/xs:element[@name='lowerInterpretation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedVolumeType']//xs:attribute[@name='lowerInterpretation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating how a value needs to be interpreted when used as a filter or condition. For example: above the value or below the value. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:sequence/xs:element[@name='issueTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:attribute[@name='issueTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time the report is issued.

If this element is not inherited from the encapsulating iwxxm:MeteorologicalFeatureCollection this element shall be present.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:sequence/xs:element[@name='originatingCentre']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:attribute[@name='originatingCentre']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Institution that creates the reports.

If this element is not inherited from the encapsulating iwxxm:MeteorologicalFeatureCollection this element shall be present.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:sequence/xs:element[@name='phenomenonBaseTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:attribute[@name='phenomenonBaseTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The data time of the forecast, usually provided to identify different sets of numerical weather prediction product.

To be used in conjunction with iwxxm:phenomenonTime when iwxxm:phenomenonCategory="weatherForecasts" 

If this element is not inherited from the encapsulating iwxxm:MeteorologicalFeatureCollection this element shall be present.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:sequence/xs:element[@name='phenomenonCategory']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:attribute[@name='phenomenonCategory']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The category of the meteorological phenomenon which is either weatherObservations or weatherForecasts.

If this element is not inherited from the encapsulating iwxxm:MeteorologicalFeatureCollection this element shall be present.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time instant or period during which the indicated meteorological phenomenon occurred or is expected to occur.

When iwxxm:phenomenonCategory="weatherObservations" it is the observation time of the phenomenon.

When iwxxm:phenomenonCategory="weatherForecasts" it is the forecast time of the phenomenon.

If this element is not inherited from the encapsulating iwxxm:MeteorologicalFeatureCollection this element shall be present.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:sequence/xs:element[@name='phenomenon']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:attribute[@name='phenomenon']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The meteorological phenomenon mentioned in the report.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:sequence/xs:element[@name='phenomenonGeometry']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:attribute[@name='phenomenonGeometry']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Geometry of the meteorological phenomenon.

The actual featureType to be used in describing the geometry shall be constraint by iwxxm:phenomenonCategory and iwxxm:phenomenon.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:sequence/xs:element[@name='phenomenonProperty']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureType']//xs:attribute[@name='phenomenonProperty']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Properties of the meteorological phenomenon.

The actual featureType to be used in describing the properties shall be constraint by iwxxm:phenomenonCategory and iwxxm:phenomenon.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedSurfaceType']//xs:sequence/xs:element[@name='elevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedSurfaceType']//xs:attribute[@name='elevation']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the surface measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedSurfaceType']//xs:sequence/xs:element[@name='verticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedSurfaceType']//xs:attribute[@name='verticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedSurfaceType']//xs:sequence/xs:element[@name='interpretation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedSurfaceType']//xs:attribute[@name='interpretation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating how a value needs to be interpreted when used as a filter or condition. For example: above the value or below the value.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:sequence/xs:element[@name='boundingPeriod']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:attribute[@name='boundingPeriod']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The period covering all of the phenomena mentioned in the collective.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:sequence/xs:element[@name='boundingVolume']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:attribute[@name='boundingVolume']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The volume containing all of the phenomena mentioned in the collective during the bounding period.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:sequence/xs:element[@name='phenomenaList']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:attribute[@name='phenomenaList']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">List of meteorological phenomena involved in the collection.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:sequence/xs:element[@name='issueTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:attribute[@name='issueTime']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time the collective is issued.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:sequence/xs:element[@name='originatingCentre']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:attribute[@name='originatingCentre']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Institution that creates the reports.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:sequence/xs:element[@name='phenomenonCategory']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:attribute[@name='phenomenonCategory']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The category of the meteorological phenomenon which is either weatherObservations or weatherForecasts.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:sequence/xs:element[@name='phenomenonBaseTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:attribute[@name='phenomenonBaseTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The data time of the forecast, usually provided to identify different sets of numerical weather prediction product.

To be used in conjunction with iwxxm:phenomenonTime when iwxxm:phenomenonCategory="weatherForecasts" 

If this element is not inherited from the encapsulating iwxxm:MeteorologicalFeatureCollection this element shall be present.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:sequence/xs:element[@name='phenomenonTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='MeteorologicalFeatureCollectionType']//xs:attribute[@name='phenomenonTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time instant or period during which the indicated meteorological phenomenon occurred or is expected to occur.

When iwxxm:phenomenonCategory="weatherObservations" it is the observation time of the phenomenon.

When iwxxm:phenomenonCategory="weatherForecasts" it is the forecast time of the phenomenon.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedEnvelopeType']//xs:sequence/xs:element[@name='upperElevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedEnvelopeType']//xs:attribute[@name='upperElevation']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the upper surface measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedEnvelopeType']//xs:sequence/xs:element[@name='upperVerticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedEnvelopeType']//xs:attribute[@name='upperVerticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedEnvelopeType']//xs:sequence/xs:element[@name='lowerElevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedEnvelopeType']//xs:attribute[@name='lowerElevation']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the lower surface measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedEnvelopeType']//xs:sequence/xs:element[@name='lowerVerticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedEnvelopeType']//xs:attribute[@name='lowerVerticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedPointType']//xs:sequence/xs:element[@name='elevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedPointType']//xs:attribute[@name='elevation']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the point measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedPointType']//xs:sequence/xs:element[@name='verticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedPointType']//xs:attribute[@name='verticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedPointType']//xs:sequence/xs:element[@name='interpretation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedPointType']//xs:attribute[@name='interpretation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating how a value needs to be interpreted when used as a filter or condition. For example: above the value or below the value. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedCurveType']//xs:sequence/xs:element[@name='elevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedCurveType']//xs:attribute[@name='elevation']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the curve measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedCurveType']//xs:sequence/xs:element[@name='verticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedCurveType']//xs:attribute[@name='verticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedCurveType']//xs:sequence/xs:element[@name='interpretation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedCurveType']//xs:attribute[@name='interpretation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating how a value needs to be interpreted when used as a filter or condition. For example: above the value or below the value. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedLevelType']//xs:sequence/xs:element[@name='elevation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedLevelType']//xs:attribute[@name='elevation']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical distance of the curve measured from Mean Sea Level (MSL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedLevelType']//xs:sequence/xs:element[@name='verticalReference']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedLevelType']//xs:attribute[@name='verticalReference']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating the reference for a vertical distance. Two series of values exist: 1) real distance: from GND, from the MSL, from the WGS-84 ellipsoid; 2) distance based on a difference of pressures, according to the standard atmosphere.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedLevelType']//xs:sequence/xs:element[@name='interpretation']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ElevatedLevelType']//xs:attribute[@name='interpretation']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">A code indicating how a value needs to be interpreted when used as a filter or condition. For example: above the value or below the value. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WMOCategoryCodeType']//xs:sequence/xs:element[@name='weatherObservations']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WMOCategoryCodeType']//xs:attribute[@name='weatherObservations']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Weather Observations</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WMOCategoryCodeType']//xs:sequence/xs:element[@name='weatherForecasts']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='WMOCategoryCodeType']//xs:attribute[@name='weatherForecasts']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Weather Forecasts.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='RelationalOperatorType']//xs:sequence/xs:element[@name='ABOVE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='RelationalOperatorType']//xs:attribute[@name='ABOVE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The actual value is above the maximum value that can be determined by the system ("ABV", "P")</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='RelationalOperatorType']//xs:sequence/xs:element[@name='BELOW']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='RelationalOperatorType']//xs:attribute[@name='BELOW']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The actual value is below the minimum value that can be determined by the system ("BLW", "M")</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='CloudLayerType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element CloudLayer'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='CloudLayerType']//xs:sequence/xs:element[@name='amount']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='CloudLayerType']//xs:attribute[@name='amount']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The observed cloud amount</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='CloudLayerType']//xs:sequence/xs:element[@name='base']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='CloudLayerType']//xs:attribute[@name='base']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">For a given cloud or cloud layer, height of the lowest level in the atmosphere at which the air contains a perceptible quantity of cloud particles.

Measured cloud bases shall be reported in meters ("m") or feet ("[ft_i]").</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='CloudLayerType']//xs:sequence/xs:element[@name='cloudType']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='CloudLayerType']//xs:attribute[@name='cloudType']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The observed significant cloud types: cumulonimbus or towering cumulus</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportStatusType']//xs:sequence/xs:element[@name='NORMAL']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportStatusType']//xs:attribute[@name='NORMAL']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The first issuance of a report. </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportStatusType']//xs:sequence/xs:element[@name='AMENDMENT']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportStatusType']//xs:attribute[@name='AMENDMENT']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The report is an amendment to a previously issued report.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportStatusType']//xs:sequence/xs:element[@name='CORRECTION']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportStatusType']//xs:attribute[@name='CORRECTION']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The report is a correction to a previously issued report.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:sequence/xs:element[@name='translatedBulletinID']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:attribute[@name='translatedBulletinID']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The TAC bulletin ID that was translated, of the form 'TTAAiiCCCYYGGgg'</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:sequence/xs:element[@name='translatedBulletinReceptionTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:attribute[@name='translatedBulletinReceptionTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which the translated TAC bulletin was received by the translation centre</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:sequence/xs:element[@name='translationCentreDesignator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:attribute[@name='translationCentreDesignator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The ICAO designator of the centre which performed translation from TAC to XML</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:sequence/xs:element[@name='translationCentreName']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:attribute[@name='translationCentreName']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The name of the translation centre which performed translation from TAC to XML</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:sequence/xs:element[@name='translationTime']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:attribute[@name='translationTime']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The time at which translation was performed from TAC to XML</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:sequence/xs:element[@name='translationFailedTAC']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='ReportType']//xs:attribute[@name='translationFailedTAC']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The full, original TAC that could not be translated.  When translation fails only the report type (i.e, SIGMET or METAR), translation information and other basic report metadata should be provided.  In this case no translated content will be included other than the original TAC.  Translation is considered to have failed when either not all of the TAC could be understood by the translation software or not all of the mandatory TAC content could be found.  Permissible usage may be set as normal and TAC that failed translation may still be used for operational purposes, but under no circumstances should partially translated content be distributed or marked as operational</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='BasicReportType']//xs:sequence/xs:element[@name='reportStatus']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='BasicReportType']//xs:attribute[@name='reportStatus']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The issuance status of the report.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='BasicReportType']//xs:sequence/xs:element[@name='permissibleUsage']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='BasicReportType']//xs:attribute[@name='permissibleUsage']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The permissible usage of this report (OPERATIONAL or NON-OPERATIONAL).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='BasicReportType']//xs:sequence/xs:element[@name='permissibleUsageReason']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='BasicReportType']//xs:attribute[@name='permissibleUsageReason']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The permissible usage reason of this report. Only populated when the permissible usage is NON-OPERATIONAL.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='BasicReportType']//xs:sequence/xs:element[@name='permissibleUsageSupplementary']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='BasicReportType']//xs:attribute[@name='permissibleUsageSupplementary']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Additional human-readable descriptive information regarding the permissible usage.  Only populated when the permissible usage is NON-OPERATIONAL.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeCloudForecastType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeCloudForecast'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeCloudForecastType']//xs:sequence/xs:element[@name='verticalVisibility']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:attribute name="nillable">
            <xsl:value-of select="'true'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeCloudForecastType']//xs:attribute[@name='verticalVisibility']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The vertical visibility.  Vertical visibility is defined as the vertical visual range into an obscuring medium.

Vertical visibility shall be reported either in meters ("m") or feet ("[ft_i]").
</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='PermissibleUsageType']//xs:sequence/xs:element[@name='OPERATIONAL']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='PermissibleUsageType']//xs:attribute[@name='OPERATIONAL']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Data may be used for operational purposes</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='PermissibleUsageType']//xs:sequence/xs:element[@name='NON-OPERATIONAL']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='PermissibleUsageType']//xs:attribute[@name='NON-OPERATIONAL']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Data should not be used for operational purposes, but may be used for other purposes</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TimeIndicatorType']//xs:sequence/xs:element[@name='OBSERVATION']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TimeIndicatorType']//xs:attribute[@name='OBSERVATION']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The information is observed</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TimeIndicatorType']//xs:sequence/xs:element[@name='FORECAST']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='TimeIndicatorType']//xs:attribute[@name='FORECAST']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The information is predicated or estimated to occur at some point in the future</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindForecastType']//xs:sequence/xs:element[@name='variableWindDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindForecastType']//xs:attribute[@name='variableWindDirection']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indicates variable wind direction.  Cannot be reported with a mean wind direction</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:sequence">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="element">
            <xsl:attribute name="name">
               <xsl:value-of select="'extension'"/>
            </xsl:attribute>
            <xsl:attribute name="type">
               <xsl:value-of select="'iwxxm:ExtensionType'"/>
            </xsl:attribute>
            <xsl:attribute name="minOccurs">
               <xsl:value-of select="'0'"/>
            </xsl:attribute>
            <xsl:attribute name="maxOccurs">
               <xsl:value-of select="'unbounded'"/>
            </xsl:attribute>
            <xsl:element name="annotation">
               <xsl:element name="documentation">
                  <xsl:value-of select="'Extension block for optional and/or additional parameters for element AerodromeSurfaceWindTrendForecast'"/>
               </xsl:element>
            </xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:sequence/xs:element[@name='meanWindDirection']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:attribute[@name='meanWindDirection']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The forecast average wind direction from which wind is blowing.

Wind direction shall be given in degrees from true North. Plane angle unit of measure (uom) is "deg".  A true north wind is indicated with a direction of 360. Calm wind is indicated with a direction of 0.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:sequence/xs:element[@name='meanWindSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:attribute[@name='meanWindSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:attribute name="use">
            <xsl:value-of select="'required'"/>
         </xsl:attribute>
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">The forecast average wind speed.

Wind speeds shall be provided in either two units of measures: "m/s" or "[kn_i]" (knot).</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:sequence/xs:element[@name='meanWindSpeedOperator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:attribute[@name='meanWindSpeedOperator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indication that the mean wind speed is above or below the reported value.  To report a wind speed of at least 49 meters per second, wind speed is reported as 49 meters per second and the operator is reported as "above".

When no operator is reported, wind speed is an exact value with identical semantics to other measured quantities.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:sequence/xs:element[@name='windGustSpeed']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:attribute[@name='windGustSpeed']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Forecast variations from the mean wind speed (gusts).

Wind gusts shall be provided in either two units of measures: "m/s" or "[kn_i]" (knot).
</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:sequence/xs:element[@name='windGustSpeedOperator']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='AerodromeSurfaceWindTrendForecastType']//xs:attribute[@name='windGustSpeedOperator']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Indication that the wind gust speed is above or below the reported value.  To report a wind gust speed of at least 49 meters per second, wind gust speed is reported as 49 meters per second and the operator is reported as "above".

When no operator is reported, wind gust speed is an exact value with identical semantics to other measured quantities.</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='PermissibleUsageReasonType']//xs:sequence/xs:element[@name='TEST']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='PermissibleUsageReasonType']//xs:attribute[@name='TEST']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Data is part of a test activity and should not be used for operational purposes.  This may include circumstances such as issuing a single message to assess a new data network path, or as part of a more organized test of message distribution/availability such as a regional SIGMET test</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='PermissibleUsageReasonType']//xs:sequence/xs:element[@name='EXERCISE']">
      <xsl:param name="typeName" select="@type"/>
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
      </xsl:element>
   </xsl:template>
   <xsl:template xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 match="xs:complexType[@name='PermissibleUsageReasonType']//xs:attribute[@name='EXERCISE']">
      <xsl:element name="{local-name()}">
         <xsl:apply-templates select="@*|node()"/>
         <xsl:element name="annotation">
            <xsl:element name="documentation">Data is part of a test exercise and should not be used for operational purposes.  This may include circumstances where realistic data is issued to be used in organized exercises where users will practice or train for potential scenarios.  For example, VA SIGMET exercises may include realistic data which is intended to be considered by users participating in the exercise but is not intended for operational use</xsl:element>
         </xsl:element>
      </xsl:element>
   </xsl:template>
	<!-- End -->

</xsl:stylesheet>
